// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// 카카오 장소 테이블
model Place {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @default(now()) @updatedAt @map("updated_at")
  name      String
  latitude  Float
  longitude Float
  mapId     Int?       @map("map_id")
  PlaceMap  PlaceMap[]

  @@map("place")
}

// 등록한 지도 테이블
model Map {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @default(now()) @updatedAt @map("updated_at")
  isDeleted Boolean    @default(false) @map("is_deleted")
  deletedAt DateTime?  @map("deleted_at")
  name      String
  PlaceMap  PlaceMap[]

  @@map("map")
}

// 지도와 장소의 다대다 관계 테이블
model PlaceMap {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  placeId   Int      @map("place_id")
  mapId     Int      @map("map_id")
  place     Place    @relation(fields: [placeId], references: [id])
  map       Map      @relation(fields: [mapId], references: [id])

  @@map("place_map")
}
